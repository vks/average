name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: nightly
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: 1.63.0  # MSRV
          - os: ubuntu-latest
            deps: sudo apt-get update ; sudo apt install gcc-multilib
            target: i686-unknown-linux-gnu
            toolchain: stable
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: nightly
            variant: minimal_versions
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          targets: ${{ matrix.target }}
          toolchain: ${{ matrix.toolchain }}
      - name: Install dependencies (if necessary)
        run: ${{ matrix.deps }}
      - name: Minimal versions (if necessary)
        if: ${{ matrix.variant == 'minimal_versions' }}
        run: cargo generate-lockfile -Z minimal-versions
      - name: Test nightly (if possible)
        if: ${{ matrix.toolchain == 'nightly' }}
        run: |
          cargo test --target ${{ matrix.target }} --features=nightly
          cargo test --target ${{ matrix.target }} --all-features
          cargo test --target ${{ matrix.target }} --benches --all-features
      - name: Test
        run: |
          cargo test --target ${{ matrix.target }}
          # doctests don't work without `libm` or `std`
          cargo test --target ${{ matrix.target }} --tests --no-default-features
          # all stable features:
          cargo test --target ${{ matrix.target }} --features=std,serde1,rayon
  test-no-std:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          targets: thumbv6m-none-eabi
          toolchain: nightly
      - name: Build top-level only
        run: |
          cargo build --target=thumbv6m-none-eabi --no-default-features
          cargo build --target=thumbv6m-none-eabi
          cargo build --target=thumbv6m-none-eabi --features serde1
          cargo build --target=thumbv6m-none-eabi --no-default-features --features serde1
